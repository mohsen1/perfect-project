import * as path from 'path';
import * as fs from 'fs';
import * as React from 'react';
import * as express from 'express';
import * as webpack from 'webpack';
import * as cheerio from 'cheerio';
import { renderToString } from 'react-dom/server';

import App from './components/App';

interface ServerRendererArguments {
    clientStats: webpack.Stats;
    serverStats: webpack.Stats;
}

/**
 * Universal render function in development mode
 */
export default function serverRenderer({ clientStats, serverStats }: ServerRendererArguments) {
    let html = '';
    if (process.env.NODE_ENV === 'production') {
        html = fs.readFileSync('./dist/index.html').toString();
    }

    return (req: express.Request, res: express.Response, next: express.NextFunction) => {

        if (process.env.NODE_ENV === 'development') {
            html = getDevelopmentIndex(clientStats);
        }

        const $ = cheerio.load(html);

        // populate the app content...
        $('#root').html(renderToString(<App />));

        res.status(200).send($.html());
    };
}

/** Get development index.html string */
function getDevelopmentIndex(stats: any) {
    // this is bad, html with injected assets is already generated by html plugin.
    // Find a way to use that generated html
    const index = fs.readFileSync('./src/index.html').toString();
    const $ = cheerio.load(index);
    const assets = stats.assets;
    const publicPath = stats.publicPath;
    const cssAssets = assets.filter(({name}) => name.endsWith('.css'));
    const jsAssets = assets.filter(({name}) => name.endsWith('.js'));
    const cssTags = cssAssets.map(({name}) => `<link href="${publicPath}${name}" type="stylesheet" />`);
    const jsTags = jsAssets.map(({name}) => `<script src="${publicPath}${name}"></script>`);
    $('body').append(cssTags.join(''));
    $('body').append(jsTags.join(''));

    return $.html();
}

